@model CustomNotificationsWithSignalR.Models.TestTable

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TestTable</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TestMessage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TestMessage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TestMessage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div id="Message">

</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.1.js"></script>
    <script src="~/signalr/hubs"></script>

    <script>
        $(function () {
            var hub = $.connection.customnotificationhub;
            var icon = Notification.icon;
            hub.client.DataAdded = function (entity, entityType) {
                if (window.Notification && Notification.permission !== "denied") {
                    Notification.requestPermission(function (status) {  // status is "granted", if accepted by user
                        var n = new Notification('Test', {
                            body: entity.TestMessage, //Coloumn name in table
                            icon: ""
                        });
                    });
                }

            };

            $.connection.hub.start();
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")

}
